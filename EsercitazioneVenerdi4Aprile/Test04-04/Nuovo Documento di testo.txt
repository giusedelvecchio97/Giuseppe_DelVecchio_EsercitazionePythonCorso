16.il controlli del flusso sono delle strutture che permettono di gestire l'esecuzione e la sequenza delle nostre istruzioni in base a delle condizioni che permettono lo scorrimento  del sistema in base alla verifica di quest'ultime. Abbiamo 2 tipi: i cili con for e while , dove il primo è un ciclo matematico dove sappiamo a priori la fine del ciclo attraverso un intervallo di azione ( inizio e fine), nel while invece il ciclo dipende dalla condizione che ne definisce il continuo o l'uscita. gli altri controllori sono i costrutti di selezione, con il costrutto if( condizione) che verifica che la condizione sia vera ed in quel caso permetterà un azione, e l'else che permette di eseguire nel caso non si verificasse. elif invece permette di avere varie opzioni all'if per avere delle opzioni multiple maggiori di 2, a differenza dell'if e dell'else possono essere infiniti, if ed else no, insdicano inizio e fine del costrutto di selezione. Match invece permette una scelta multipla(menu) in base ad una condizione ed un valore attraverso vari case. 

14.le funzioni sono delle strutture che ci permettono di separare il corpo o un azione dal suo utilizzo, per poter avere efficienza al livello di memoria e per poter modulare il codice. possono essere di ritorno , se attraverso il return permettono di far ritornare un valore oppure di esecuzione se non permettono un ritorno ma svolgono un'azione( es. stampa) . incarnano l'astrazione perchè abbiamo la possibilità di separare corpo e sviluppo dall'utilizzo che ne facciamo e quindi ci permette di rappresentare una funzione del nostro sistema, in maniera delineata e precisa e richiamata attraverso il metodo descritto dalla firma del metodo e dai suoi parametri( se necessari)

12.1. Astrazione : essenza del paradigma oggetti, ci permette di dividere corpo e struttura , dall'uso. manifestazione più concreta sono le classi: dove rappresentiamo un'entità reale in una singola struttura con metodi e attributi(caratteristiche e azioni), separiamo corpo e struttura dall'uso che ne faremo nel sistema. 2.Incapsulamento : ci permette di nascondere lo sviluppo, ci permette di usare una azione, o una variabile, senza conoscere perfettamente il come sia stata sviluppata( esempio tangibile metodi, o classi all'interno di altre classi): 3 polimorfismo : permette di poter utilizzare una stessa entità, o funzione in più contesti non considerando quale tipo stia maneggiando. permette ad un'entità di cambiare foma in base al contesto(es. metodi che permettono di avere come parametri diversi tipi o di farci operazioni in base al tipo, metodo uguale ma contesto cambia),4: EREDITARIETA':permette di avere una struttura gerarchica del sistema, permette di ereditare attributi e comportamenti da classi o entità figlie ( struttura gerarchica tra superclasse e sottoclasse) e addirittura di ampliarne la struttura

4.una classe è un'astrazione di un entità reale che ne permette di rappresentare caratteristiche ( attraverso gli attributi) e comportamenti attraverso i metodi della classe stessa. quindi ci permette di creare vari oggetti di quel tipo classe, avendo solo una astrazione di quell'entità, una classe per infiniti oggetti, tutti con una proprio ciclo di vita.